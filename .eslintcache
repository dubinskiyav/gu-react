[{"D:\\WORK\\Programming\\React\\gu-react\\src\\index.js":"1","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Main.js":"2","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\App.js":"3","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\ModuleHeader.js":"4","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Help.js":"5","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Error.js":"6","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\referencebooks\\ReferenceBooks.js":"7","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\storage\\Storage.js":"8","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\acc\\Acc.js":"9","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\admin\\Admin.js":"10","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\Edizm.js":"11","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\FilterPanel.js":"12","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\const.js":"13","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\admin\\Usefullinks.js":"14","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\test01.js":"15","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\counter.js":"16","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\hoc\\log-props.js":"17","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\blockRatio.js":"18","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\BlockRatio.js":"19","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\withBlockRatio.js":"20","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\WithBlockRatio.js":"21","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\RadioGroup.js":"22","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\EditForm.js":"23","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\EdizmForm.js":"24","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\Dialogs.js":"25"},{"size":2418,"mtime":1614083047717,"results":"26","hashOfConfig":"27"},{"size":1359,"mtime":1613885039783,"results":"28","hashOfConfig":"27"},{"size":6999,"mtime":1614083104724,"results":"29","hashOfConfig":"27"},{"size":923,"mtime":1614172281881,"results":"30","hashOfConfig":"27"},{"size":886,"mtime":1613885513778,"results":"31","hashOfConfig":"27"},{"size":466,"mtime":1613885959548,"results":"32","hashOfConfig":"27"},{"size":587,"mtime":1614081925582,"results":"33","hashOfConfig":"27"},{"size":516,"mtime":1613914017379,"results":"34","hashOfConfig":"27"},{"size":524,"mtime":1613907158259,"results":"35","hashOfConfig":"27"},{"size":527,"mtime":1614081742647,"results":"36","hashOfConfig":"27"},{"size":13968,"mtime":1614240826898,"results":"37","hashOfConfig":"27"},{"size":1694,"mtime":1614092200454,"results":"38","hashOfConfig":"27"},{"size":957,"mtime":1614197766305,"results":"39","hashOfConfig":"27"},{"size":1278,"mtime":1614082637062,"results":"40","hashOfConfig":"27"},{"size":568,"mtime":1614087829148,"results":"41","hashOfConfig":"27"},{"size":502,"mtime":1614087534221,"results":"42","hashOfConfig":"27"},{"size":730,"mtime":1614089825851,"results":"43","hashOfConfig":"27"},{"size":578,"mtime":1614094377484,"results":"44","hashOfConfig":"27"},{"size":578,"mtime":1614094377484,"results":"45","hashOfConfig":"27"},{"size":991,"mtime":1614100121698,"results":"46","hashOfConfig":"27"},{"size":991,"mtime":1614100121698,"results":"47","hashOfConfig":"27"},{"size":1262,"mtime":1614103320747,"results":"48","hashOfConfig":"27"},{"size":4769,"mtime":1614240826862,"results":"49","hashOfConfig":"27"},{"size":2315,"mtime":1614241055741,"results":"50","hashOfConfig":"27"},{"size":296,"mtime":1614198012588,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1gp33hv",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\WORK\\Programming\\React\\gu-react\\src\\index.js",[],["111","112"],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Main.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\App.js",["113","114","115","116","117","118"],"import React from 'react';\r\nimport '../resources/css/App.css';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb} from 'antd';\r\nimport { InfoCircleOutlined, AppstoreOutlined, HomeOutlined } from \"@ant-design/icons\";\r\nimport { UserOutlined, AuditOutlined, ProfileOutlined, ShopOutlined, ProjectOutlined  } from '@ant-design/icons';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n/* Ссылка с иконкой */\r\nconst IconLink = ({ icon, text, href }) => (\r\n  <a target=\"_blank\" rel=\"noreferrer\" className=\"footer-link\" href={href}>\r\n    {icon}<span className=\"footer-link-text\">{text}</span>\r\n  </a>\r\n);\r\n\r\n// здесь левое меню, в зависимости от subsystem\r\nconst getSubMenu=(sys)=>{\r\n  let syss = sys;\r\n  // Фрагменты https://ru.reactjs.org/docs/fragments.html\r\n  switch (syss) {\r\n    case 'referencebooks': {/* НСИ */}\r\n      return (<React.Fragment>\r\n        <SubMenu key=\"catalog\" icon={<ProfileOutlined/>} title=\"Общесистемные справочники\">\r\n          <Menu.Item key=\"catalog.edizm\">\r\n            <Link to=\"/edizm\">Единицы измерения</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"catalog.material\">\r\n            <Link to=\"/material\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"catalog.priznak\">\r\n            <Link to=\"/priznak\">Признаки</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"object\" icon={<AppstoreOutlined/>} title=\"Объекты\">\r\n          <Menu.Item key=\"object.object\">Объекты</Menu.Item>\r\n          <Menu.Item key=\"object.bank\">Банки</Menu.Item>\r\n          <Menu.Item key=\"object.company\">Организации</Menu.Item>\r\n          <Menu.Item key=\"object.people\">Физические лица</Menu.Item>\r\n        </SubMenu>\r\n      </React.Fragment>)\r\n    case 'storage': {/* Складской учет */}\r\n      return (<React.Fragment>\r\n        <SubMenu key=\"catalog\" icon={<AppstoreOutlined/>} title=\"Справочники\">\r\n          <Menu.Item key=\"catalog.storage\">\r\n            <Link to=\"/storage\">Справочник складов</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"work\" icon={<ShopOutlined/>} title=\"Работа\">\r\n          <Menu.Item key=\"work.object\">Приход</Menu.Item>\r\n          <Menu.Item key=\"work.bank\">Расход</Menu.Item>\r\n          <Menu.Item key=\"work.report\">Отчетность</Menu.Item>\r\n          <Menu.Item key=\"work.setting\">Настройки</Menu.Item>\r\n        </SubMenu>\r\n      </React.Fragment>)\r\n    case 'acc': {/* Бухгалтерский учет */}\r\n      return (<React.Fragment>\r\n        <SubMenu key=\"system\" icon={<ProfileOutlined/>} title=\"Справочники\">\r\n          <Menu.Item key=\"system.chart\">План счетов</Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"work\" icon={<ProjectOutlined/>} title=\"Работа\">\r\n          <Menu.Item key=\"work.contractor\">Работа с поставщиками и подрядчиками</Menu.Item>\r\n          <Menu.Item key=\"work.bank\">Банковские операции</Menu.Item>\r\n          <Menu.Item key=\"work.report\">Отчетность</Menu.Item>\r\n          <Menu.Item key=\"work.setting\">Настройки</Menu.Item>\r\n        </SubMenu>\r\n      </React.Fragment>)\r\n    case 'admin': {/* Администрирование */}\r\n      return (<React.Fragment>\r\n        <SubMenu key=\"help\" icon={<AppstoreOutlined/>} title=\"Помощь\">\r\n          <Menu.Item key=\"help.usefullinks\">\r\n              <Link to=\"/usefullinks\">Полезные ссылки</Link>\r\n            </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu key=\"develop\" icon={<AppstoreOutlined/>} title=\"В разработке\">\r\n          <Menu.Item key=\"develop.user\">\r\n            <Link to=\"/user\">Пользователи</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"develop.audit\">\r\n            <Link to=\"/audit\">Аудит</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"develop.test01\">\r\n            <Link to=\"/test01\">Тест 01</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </React.Fragment>)\r\n  default:\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Основной компонент. \r\n * @param {*} props \r\n */\r\nconst App = (props)=>{\r\n  let subsystem = props.subsystem;\r\n  var [collapsed,setCollapse] = React.useState(false);\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider width={250} collapsible collapsed={collapsed} onCollapse={setCollapse}>\r\n        <Link to=\"/\"><div className=\"logo\">Геликон Утилиты</div></Link>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"inline\"\r\n          defaultOpenKeys={[props.menu]}\r\n          defaultSelectedKeys={[props.submenu]}\r\n          style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n          {getSubMenu(subsystem)}\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }} >\r\n          <Menu \r\n            theme=\"dark\" \r\n            mode=\"horizontal\" \r\n            defaultSelectedKeys={[props.subsystem]}\r\n          >\r\n            <Menu.Item key=\"referencebooks\">\r\n              <Link to=\"/referencebooks\">НСИ</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"storage\">\r\n              <Link to=\"/storage\">Складской учет</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"acc\">\r\n              <Link to=\"/acc\">Бухгалтерский учет</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"admin\">\r\n              <Link to=\"/admin\">Администрирование</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            {props.breadcrumb?<Breadcrumb.Item href=\"/\"><HomeOutlined /></Breadcrumb.Item>:''}\r\n            {props.breadcrumb?\r\n              props.breadcrumb.map((o,idx)=>\r\n              <Breadcrumb.Item {...(o.href?{href:o.href}:{})} key={idx}>\r\n                  {o.label}\r\n                </Breadcrumb.Item>)\r\n              :''\r\n            }\r\n            {/*  у нас объект obj = {foo:\"abc\", bar:\"def\"} Когда в теге записываем {...obj} тег получает пропсы foo=\"abc\" bar=\"def\" */}\r\n          </Breadcrumb>\r\n          <div className=\"site-layout-workspace\">\r\n            {props.children}   {/* рендерим все, что передано внутри него при вызове */}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{padding:'13px 32px' }}>\r\n          Gelicon Pro ©2021\r\n          {props.helpId?<IconLink text=\"Помощь\" icon={<InfoCircleOutlined/>} href={props.helpId}/>:\"\"}\r\n        </Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\ModuleHeader.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Help.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\Error.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\referencebooks\\ReferenceBooks.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\storage\\Storage.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\acc\\Acc.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\admin\\Admin.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\Edizm.js",["119","120","121","122"],"import React from 'react';\r\nimport { Space, Button, Table, notification, Checkbox,Form } from 'antd';\r\nimport { Radio } from 'antd';\r\nimport {CheckOutlined} from '@ant-design/icons';\r\nimport reqwest from 'reqwest';\r\nimport App from '../../App';\r\nimport ModuleHeader from \"../../lib/ModuleHeader\";\r\nimport FilterPanel from \"../../lib/FilterPanel\";\r\nimport {BUTTON_ADD_LABEL,BUTTON_DEL_LABEL,BUTTON_REFRESH_LABEL,MSG_CONFIRM_DELETE} from \"../../lib/const\";\r\nimport * as globalSettings from \"../../lib/const\";\r\nimport RadioGroup from \"../../lib/RadioGroup\";\r\nimport EditForm from \"../../lib/EditForm\";\r\nimport {confirm} from \"../../lib/Dialogs\";\r\nimport { format } from 'react-string-format';\r\nimport EdizmForm from \"./EdizmForm\";\r\n\r\nconst MOD_TITLE = \"Единицы измерения\";\r\nconst MODE_HELP_ID = \"/help/edizm\";\r\n\r\n// позиция в меню\r\n// в subsystem - key верхнего меню\r\nconst MNU_SUBSYSTEM = \"referencebooks\";\r\nconst HREF_SUBSYSTEM = \"/referencebooks\";\r\nconst NAME_SUBSYSTEM = \"НСИ\";\r\n// в menu - key бокового главного\r\nconst MNU_MENU = \"catalog\";\r\nconst NAME_MENU = 'Общесистемные справочники';\r\n// в submenu - key бокового подменю (финальный пункт)\r\n// его имя равно имени модуля\r\nconst MNU_SUMMENU = 'catalog.edizm';\r\n// кол-во записей на страницу, по умолчанию\r\nconst DEFAULT_PAGE_SIZE = 3\r\n// автоматическое обновление при монтировании компонента\r\nconst AUTO_REFRESH = true;\r\n// URI для использования формой добавления/изменения\r\nconst URI_ROOT = globalSettings.startURL + \"edizm\"\r\nconst URI_SELECT = URI_ROOT + \"/read\"\r\nconst URI_READ_BY_ID = URI_ROOT + \"/readbyid\" \r\nconst URI_READ_FOR_ADD = URI_ROOT + \"/readforadd\"\r\nconst URI_INSERT = URI_ROOT + \"/insert\"\r\nconst URI_UPDATE = URI_ROOT + \"/update\"\r\nconst URI_DELETE = URI_ROOT + \"/delete\"\r\n\r\n// колонки в таблице\r\n// id не надо! - Его описать в key таблицы\r\nconst COLUMNS=[\r\n    {\r\n        title: 'Наименование',\r\n        dataIndex: 'name',\r\n        key: 'edizm_name',\r\n        sorter: {\r\n            multiple: 1,\r\n        },\r\n        /*defaultSortOrder:\"ascend\",*/\r\n    },\r\n    {\r\n        title: 'Обозначение',\r\n        dataIndex: 'notation',\r\n        key: 'edizm_notation',\r\n        sorter: {\r\n            multiple: 1,\r\n        },\r\n    },\r\n    {\r\n        title: 'Флаг блокировки',\r\n        dataIndex: 'blockflag',\r\n        key: 'edizm_blockflag',\r\n        render:(blockflag)=>blockflag !==0 ?<CheckOutlined />:\"\",\r\n        sorter: {\r\n            multiple: 1,\r\n        },\r\n    },\r\n    {\r\n        title: 'Код',\r\n        dataIndex: 'code',\r\n        key: 'edizm_code',\r\n        sorter: {\r\n            multiple: 1,\r\n        },\r\n    },\r\n]  \r\nconst idName = \"edizm_id\";\r\n\r\n// Форма для редактирования\r\nconst buildForm = (form)=>{\r\n    return <EdizmForm form={form} initialValues={{}}/>\r\n}\r\n\r\nconst Edizm = (props)=>{\r\n    let [data,setData] = React.useState(null); // Основной массив данных - пустой сначала\r\n    let [selectRows,setSelectRows] = React.useState([]);\r\n    // Параметры запроса для выборки данных\r\n    let [requestParams, setRequestParams] = React.useState({\r\n        // параметры запроса по умолчанию\r\n        pagination:{\r\n            showSizeChanger:true, \r\n            current:1, \r\n            pageSize:DEFAULT_PAGE_SIZE, \r\n            total: DEFAULT_PAGE_SIZE * 2, // общее количество считанных записей\r\n        },\r\n        sort:[{field:idName,order:'ascend'}],\r\n    });\r\n    let [loading,setLoading] = React.useState(false); // Момент загрузки данных для блокировки таблицы для действий\r\n    let [totalMax, setTotalMax] = React.useState(0); // Наибольшее количесвто выбранных записей\r\n    const [form] = Form.useForm(); // Форма для редактирования\r\n    let [formVisible,setFormVisible] = React.useState(false); // Видимость формы\r\n    // Контекст для редактирования - урлы\r\n    let [editorContext] = React.useState({\r\n      uriForEdit:URI_READ_BY_ID,\r\n      uriForAdd:URI_READ_FOR_ADD,\r\n      uriForIns:URI_INSERT, \r\n      uriForUpd:URI_UPDATE,\r\n    });\r\n\r\n\r\n    // key это уникальное имя фильтра, попадает в REST API\r\n    const buildFilters = ()=>{\r\n        // Обязательно назначить key у элемента\r\n        return <React.Fragment>\r\n            <Checkbox key=\"onlyBlock\">Только заблокированные</Checkbox>\r\n            {/* Смотреть комментарии в RadioGroup */}\r\n            <RadioGroup key=\"blockFlag\" initValue={1}>\r\n                <Radio value={1}>Все</Radio>\r\n                <Radio value={2}>Заблокированные</Radio>\r\n                <Radio value={3}>Не запблкированные</Radio>\r\n            </RadioGroup>\r\n        </React.Fragment>\r\n    }\r\n    \r\n      \r\n    /**\r\n    * Обработчик смены параметров запроса из таблицы\r\n    * @param {*} paginationNew // При смене пагинации\r\n    * @param {*} filters // фильтра\r\n    * @param {*} sorter  // сортировки\r\n    */\r\n    const request =  (pagination, filters, sorter)=>{\r\n        console.log(\"pagination = \" + pagination);\r\n        if (sorter.field) { // Установлена единичкая сортировка\r\n            requestParams.sort = [{\r\n                field: sorter.field, \r\n                order: sorter.order\r\n            }];\r\n          } else { // Возможно, установлена множественная сортировка\r\n            console.log(\"sorter.length = \" + sorter.length);\r\n            if (sorter.length > 0) {\r\n                requestParams.sort = [];\r\n                Object.keys(sorter).forEach(element => {\r\n                    if (sorter[element].field)\r\n                        requestParams.sort.push({\r\n                        field: sorter[element].field,\r\n                        order: sorter[element].order,\r\n                    });\r\n                });\r\n            }\r\n          }\r\n        requestParams.pagination.current = pagination.current;\r\n        requestParams.pagination.pageSize = pagination.pageSize;\r\n        refreshData();\r\n    }\r\n        \r\n    // Установка фильтра\r\n    const setFilters = (config)=>{\r\n        //debugger;\r\n        console.log(\"config = \", config);\r\n        // Обнулим фильтры\r\n        //requestParams.filters = [];\r\n        //Установим фильтры\r\n        // проверим чекбокс\r\n        if (config.blockRatio) {\r\n\r\n            //blockRatioValue = 2;\r\n        }\r\n        requestParams.filters = {\r\n            onlyBlock:config.onlyBlock?config.onlyBlock.target.checked:false,\r\n            blockFlag:config.blockFlag?config.blockFlag.target.value:1,\r\n        }\r\n        refreshData();\r\n    }\r\n\r\n    /**\r\n    * Основная перевыборка данных\r\n    */\r\n    const refreshData = () => {\r\n        console.log('refreshData - start');\r\n\r\n        setLoading(true);\r\n        const gelRequestParam = {\r\n            pageNumber: requestParams.pagination.current - 1,\r\n            pageSize: requestParams.pagination.pageSize,\r\n            sort: requestParams.sort,\r\n            filters: requestParams.filters,\r\n        };\r\n        // текущие параметры запроса\r\n        console.log(\"gelRequestParam\", gelRequestParam);\r\n\r\n        // Вычисляем total для таблицы\r\n        let total = (gelRequestParam.pageNumber + 2) * gelRequestParam.pageSize;\r\n        if (total < totalMax) {\r\n            total = totalMax;\r\n        } else {\r\n            totalMax = total;\r\n            setTotalMax(total);\r\n        }\r\n        // запрос к REST API на выборку\r\n        reqwest({\r\n            url: URI_SELECT,\r\n            contentType: \"application/json; charset=utf-8\",\r\n            method: 'post',\r\n            type: 'json',\r\n            data:JSON.stringify(gelRequestParam)\r\n        })\r\n        .then(dataNew => {\r\n            //console.log(\"dataNew = \", dataNew);\r\n            // Проверим ошибку\r\n            const { errorCode, errorMessage } = dataNew;\r\n            if ( errorCode || errorMessage ) {\r\n                console.log('errorCode=', errorCode);\r\n                const { errorCause } = dataNew;\r\n                notification.error({\r\n                  message: (errorMessage),\r\n                  description: (errorCause)\r\n                });\r\n                console.log('refreshData - error = ', dataNew);\r\n                setLoading(false);\r\n            } else {\r\n                setData(dataNew); // данные новые\r\n                // переустановим total у таблицы\r\n                requestParams.pagination.total =  total; \r\n                // сброс отметок записей\r\n                setSelectRows([]);\r\n                setLoading(false);\r\n            }\r\n        },\r\n        // todo Сделать обработку ошибок\r\n        (error) => {\r\n            notification.error({\r\n                message:\"Ошибка при выборке за пределами программы\",\r\n            });\r\n            console.log('refreshData - error = ', error);\r\n            setLoading(false);\r\n        }\r\n        );\r\n        console.log('refreshData - finish');\r\n    }\r\n\r\n    const deleteData = ()=>{\r\n        let ids = selectRows.join(',');\r\n        confirm(format(MSG_CONFIRM_DELETE,selectRows.length),()=>{\r\n            console.log(\"Delete record \"+ids);\r\n            setLoading(true); // Блокируем отклики таблицы\r\n            reqwest({\r\n                url: URI_DELETE + '/' + ids,\r\n                contentType: \"application/json; charset=utf-8\",\r\n                method: 'post',\r\n                type: 'json',\r\n            }).then((responseJson) => {\r\n                console.log('responseJson=', responseJson);\r\n                const { errorCode, errorMessage } = responseJson;\r\n                if ( errorCode || errorMessage ) {\r\n                        console.log('errorCode=', errorCode);\r\n                    const { errorCause } = responseJson;\r\n                    notification.error({\r\n                        message: (errorMessage),\r\n                        description: (errorCause)\r\n                    });\r\n                } else { // ошибки нет\r\n                    console.log('Удалили ' + ids);\r\n                    refreshData();\r\n                    const description = \"Удаление \" + selectRows.length + \" записей выполнено успешно\";\r\n                    notification.success({\r\n                        message:\"Успешно\",\r\n                        description: (description)\r\n                    });\r\n                }\r\n                setLoading(false);\r\n            });\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(!data && AUTO_REFRESH) {\r\n          setData([]); // важно, иначе начальный refresh выполняется несколько раз\r\n          refreshData();\r\n        }\r\n    });\r\n\r\n    const rowSelection={\r\n        selectedRowKeys:selectRows,\r\n        onChange:(rows)=>{\r\n            setSelectRows(rows);\r\n        }\r\n    }\r\n        \r\n    const callForm = (id)=>{\r\n        console.log(\"callForm id = \", id);\r\n        form.resetFields();\r\n        editorContext.id = id;\r\n        setFormVisible(true);\r\n    }\r\n    \r\n    return (\r\n        <App subsystem={MNU_SUBSYSTEM} menu={MNU_MENU} submenu={MNU_SUMMENU}\r\n             breadcrumb={[{label:NAME_SUBSYSTEM,href:HREF_SUBSYSTEM},{label:NAME_MENU},{label:MOD_TITLE}]}\r\n             helpId={MODE_HELP_ID}>\r\n            <ModuleHeader title={MOD_TITLE}\r\n                buttons={[\r\n                    <Button key=\"del\" onClick={()=>deleteData()} disabled={loading || selectRows.length===0}>{BUTTON_DEL_LABEL}</Button>,\r\n                    <Button key=\"refresh\" onClick={()=>refreshData()} disabled={loading}>{BUTTON_REFRESH_LABEL}</Button>,\r\n                    <Button key=\"add\" onClick={()=>callForm()} type=\"primary\">{BUTTON_ADD_LABEL}</Button>,                  \r\n                ]}\r\n            />\r\n            <FilterPanel  onChange={(fc)=>setFilters(fc)}>\r\n              {buildFilters()}\r\n            </FilterPanel>\r\n            <Table className=\"mod-main-table\" \r\n                rowClassName=\"table-editable-row\"  \r\n                columns={COLUMNS}\r\n                dataSource={data}\r\n                loading={loading}\r\n                bordered\r\n                rowSelection={rowSelection}\r\n                pagination={requestParams.pagination}\r\n                rowClassName=\"table-editable-row\"  \r\n                onChange={request}\r\n                rowKey=\"id\"\r\n                size={\"middle\"}\r\n                showSorterTooltip={false}\r\n                onRow={(record, rowIndex) => {\r\n                    return {\r\n                      onClick: event => callForm(record.id)\r\n                    };\r\n                }}\r\n            />\r\n\r\n            <EditForm visible={formVisible}\r\n                form={form}\r\n                editorContext={editorContext}\r\n                afterSave={()=>{\r\n                    setFormVisible(false);\r\n                    refreshData()\r\n                }}\r\n                afterCancel={()=>{\r\n                    setFormVisible(false);\r\n                }}\r\n            >\r\n                {buildForm(form)}\r\n            </EditForm>\r\n\r\n\r\n        </App>\r\n    )\r\n}\r\nexport default Edizm;\r\n","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\FilterPanel.js",["123"],"import React, { useState } from 'react';\r\nimport {Space} from 'antd';\r\n\r\n/**\r\n * Панель фильтра \r\n * @param {*} props \r\n */\r\nconst FilterPanel = (props)=>{\r\n    // Объявляем пустую переменную состояния config    https://ru.reactjs.org/docs/hooks-state.html\r\n    const [config] = React.useState({});\r\n\r\n    // Смена элемента key на значение val\r\n    const changed = (key,val)=>{\r\n        config[key] = val; // запишем в config новое значение\r\n        console.log(\"key=\" , key, \"val=\", val);\r\n        if (props.onChange) {\r\n            props.onChange(config); // вызовем переданный метод onChange\r\n        }\r\n    }\r\n\r\n    let allFilters =  props.children.props.children; // Массив всех фильтров, так как props.children это ReactFragment\r\n    if (!allFilters.length) { // Это один элемент, а не массив\r\n        allFilters=[allFilters]; // сделаем массив из одного элемента\r\n     }\r\n    // https://ru.reactjs.org/docs/react-api.html#cloneelement\r\n    // Клонируем элементы-фильтры, добавим к ним метод onChange\r\n    // который запишет состояние и вызовет родительский onChange, который должен обязательно быть\r\n    return (\r\n        <Space className=\"filter-panel\">\r\n            {allFilters.map((c)=>React.cloneElement(c, {\r\n                onChange: (value)=>changed(c.key,value),\r\n                key:c.key\r\n            }))}\r\n        </Space>    \r\n    )    \r\n}\r\n\r\nexport default FilterPanel;\r\n","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\const.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\admin\\Usefullinks.js",["124","125","126"],"import React from 'react';\r\nimport ModuleHeader from \"../../lib/ModuleHeader\";\r\nimport App from '../../App';\r\nimport {Link } from \"react-router-dom\";\r\nimport * as globalSettings from \"../../lib/const\";\r\n\r\nconst MOD_TITLE = \"Полезные ссылки\";\r\nconst MODE_HELP_ID = \"/help/edizm\";\r\n\r\n// позиция в меню\r\n// в subsystem - key верхнего меню\r\nconst MNU_SUBSYSTEM = \"admin\";\r\nconst HREF_SUBSYSTEM = \"\";\r\nconst NAME_SUBSYSTEM = \"Администрирование\";\r\n// в menu - key бокового главного\r\nconst MNU_MENU = \"help\";\r\nconst NAME_MENU = 'Помощь';\r\n// в submenu - key бокового подменю (финальный пункт)\r\n// его имя равно имени модуля\r\nconst MNU_SUMMENU = 'help.usefullinks';\r\n\r\nconst Usefullinks = (props)=>{\r\n    return (\r\n        <App subsystem={MNU_SUBSYSTEM} menu={MNU_MENU} submenu={MNU_SUMMENU}\r\n             breadcrumb={[{label:NAME_SUBSYSTEM,href:HREF_SUBSYSTEM},{label:NAME_MENU},{label:MOD_TITLE}]}\r\n             helpId={MODE_HELP_ID}>\r\n            <ModuleHeader title={MOD_TITLE}/>\r\n            <a target=\"_blank\" href=\"http://localhost:8080/swagger-ui.html\">API Утилит Геликона</a>\r\n        </App>\r\n    )\r\n}\r\nexport default Usefullinks;\r\n","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\test01.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\counter.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\hoc\\log-props.js",["127"],"import React from \"react\";\r\n\r\n/**\r\n * https://www.youtube.com/watch?v=G2NBRu6TFPk&ab_channel=CodeDojo\r\n * Компонент высшего порядка\r\n * @param {*} Component \r\n */\r\n\r\nfunction logProps(Component) {\r\n    class LogProps extends React.Component {\r\n        componentWillReceiveProps(nextProps) { // Вызывается при каждом рендере\r\n            console.log(\"prevProps\", this.props);\r\n            console.log(\"nextProps\", nextProps);\r\n        }\r\n        render() {\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    LogProps.displayName = 'LogProps(${Component.displayName || Component.name || \"Component\"})';\r\n\r\n    return LogProps;\r\n\r\n}\r\n\r\nexport default logProps;","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\blockRatio.js",["128"],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\BlockRatio.js",["129"],"import React from \"react\";\r\nimport { Checkbox, Radio,  } from 'antd';\r\nimport WithBlockRatio from \"./WithBlockRatio\";\r\n\r\n/**\r\n * Элемент фильтра для модуля\r\n */\r\nfunction BlockRatio(props) {\r\n    const {value} = props;\r\n    return (\r\n        <Radio.Group key=\"blockRatio\" value={value}>\r\n            <Radio value={1}>Все</Radio>\r\n            <Radio value={2}>Заблокированные</Radio>\r\n            <Radio value={3}>Не запблкированные</Radio>\r\n        </Radio.Group>\r\n    );\r\n}\r\n\r\nexport default WithBlockRatio(BlockRatio);",["130","131"],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\withBlockRatio.js",["132"],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\WithBlockRatio.js",["133"],"import React, { useState } from 'react';\r\n\r\n// Эта функция принимает компонент...\r\n// https://ru.reactjs.org/docs/higher-order-components.html\r\nfunction WithBlockRatio(WrappedComponent) {\r\n  \r\n    return class extends React.Component {\r\n\r\n        componentWillReceiveProps(nextProps) {\r\n            console.log(\"prevProps\", this.props);\r\n            console.log(\"nextProps\", nextProps);\r\n            if (nextProps.count !== this.props.count) {\r\n              this.setState({\r\n                count: nextProps.count > 100 ? 100 : nextProps.count\r\n              });\r\n            }\r\n        }\r\n\r\n        render() {\r\n          // ... и рендерит оборачиваемый компонент со свежими данными!\r\n          // Обратите внимание, что мы передаём остальные пропсы\r\n          return <WrappedComponent {...this.props} />;\r\n        }\r\n      };\r\n      \r\n}\r\n\r\nexport default WithBlockRatio;","D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\RadioGroup.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\EditForm.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\modules\\edizm\\EdizmForm.js",[],"D:\\WORK\\Programming\\React\\gu-react\\src\\components\\lib\\Dialogs.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":22},{"ruleId":"138","severity":1,"message":"142","line":7,"column":24,"nodeType":"140","messageId":"141","endLine":7,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":25,"column":28,"nodeType":"145","messageId":"146","endLine":25,"endColumn":39},{"ruleId":"143","severity":1,"message":"144","line":45,"column":21,"nodeType":"145","messageId":"146","endLine":45,"endColumn":43},{"ruleId":"143","severity":1,"message":"144","line":59,"column":17,"nodeType":"145","messageId":"146","endLine":59,"endColumn":43},{"ruleId":"143","severity":1,"message":"144","line":71,"column":19,"nodeType":"145","messageId":"146","endLine":71,"endColumn":44},{"ruleId":"138","severity":1,"message":"147","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":15},{"ruleId":"138","severity":1,"message":"148","line":93,"column":25,"nodeType":"140","messageId":"141","endLine":93,"endColumn":41},{"ruleId":"149","severity":1,"message":"150","line":281,"column":5,"nodeType":"151","endLine":281,"endColumn":20,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":324,"column":17,"nodeType":"155","endLine":324,"endColumn":50},{"ruleId":"138","severity":1,"message":"156","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"157","line":4,"column":9,"nodeType":"140","messageId":"141","endLine":4,"endColumn":13},{"ruleId":"138","severity":1,"message":"158","line":5,"column":13,"nodeType":"140","messageId":"141","endLine":5,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":28,"column":13,"nodeType":"161","endLine":28,"endColumn":77},{"ruleId":"162","severity":1,"message":"163","line":20,"column":28,"nodeType":"164","messageId":"165","endLine":20,"endColumn":97},{"ruleId":"138","severity":1,"message":"166","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"166","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"134","replacedBy":"167"},{"ruleId":"136","replacedBy":"168"},{"ruleId":"138","severity":1,"message":"156","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"156","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'AuditOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Space' is defined but never used.","'setRequestParams' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [data, refreshData] as a second argument to the useEffect Hook.","MemberExpression",["171"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Link' is defined but never used.","'globalSettings' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Checkbox' is defined but never used.",["169"],["170"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Add dependencies array: [data, refreshData]",{"range":"174","text":"175"},[10261,10261],", [data, refreshData]"]